// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateAuthor(ctx context.Context, arg CreateAuthorParams) (Author, error)
	CreateBook(ctx context.Context, arg CreateBookParams) (Book, error)
	CreateBookGenres(ctx context.Context, arg []CreateBookGenresParams) (int64, error)
	CreateGenre(ctx context.Context, name string) (Genre, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteAuthor(ctx context.Context, id int64) error
	DeleteBook(ctx context.Context, bookID int64) error
	DeleteBookGenre(ctx context.Context, genreID int64) error
	DeleteGenre(ctx context.Context, genreID int64) error
	DeleteGenreByBookIds(ctx context.Context, dollar_1 []int32) error
	DeleteManyBooks(ctx context.Context, dollar_1 []int32) error
	GetAuthorsByNames(ctx context.Context, authorsName pgtype.Text) ([]Author, error)
	GetBookById(ctx context.Context, bookID int64) (GetBookByIdRow, error)
	GetBookGenres(ctx context.Context, bookID int64) ([]GetBookGenresRow, error)
	GetBookLists(ctx context.Context) ([]GetBookListsRow, error)
	GetFirstFiftyOfAuthors(ctx context.Context) ([]Author, error)
	GetGenreByNames(ctx context.Context, name pgtype.Text) ([]Genre, error)
	GetGenres(ctx context.Context) ([]Genre, error)
	GetUser(ctx context.Context, username string) (User, error)
	UpdateAuthor(ctx context.Context, arg UpdateAuthorParams) (Author, error)
	UpdateBookById(ctx context.Context, arg UpdateBookByIdParams) (Book, error)
	UpdateGenre(ctx context.Context, arg UpdateGenreParams) (Genre, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
